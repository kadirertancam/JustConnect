version: '3.8'

services:
  # JustConnect V2 Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: justconnect-v2-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/justconnect_v2
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-your_super_secret_jwt_key_change_this_in_production}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./temp:/app/temp
    networks:
      - justconnect-network
    depends_on:
      - mongo
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Database
  mongo:
    image: mongo:6.0
    container_name: justconnect-v2-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=justconnect_v2
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-admin123}
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - justconnect-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: justconnect-v2-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - justconnect-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: justconnect-v2-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./uploads:/var/www/uploads:ro
    networks:
      - justconnect-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Express (Development only)
  mongo-express:
    image: mongo-express:latest
    container_name: justconnect-v2-mongo-express
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-admin123}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_USER:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD:-admin123}
    ports:
      - "8081:8081"
    networks:
      - justconnect-network
    depends_on:
      - mongo
    profiles:
      - development

  # Redis Commander (Development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: justconnect-v2-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
    ports:
      - "8082:8081"
    networks:
      - justconnect-network
    depends_on:
      - redis
    profiles:
      - development

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local

networks:
  justconnect-network:
    driver: bridge

# For development, use:
# docker-compose --profile development up -d

# For production, use:
# docker-compose up -d