module.exports = {\n  // Test environment\n  testEnvironment: 'node',\n  \n  // Test directories\n  testMatch: [\n    '**/tests/**/*.test.js',\n    '**/tests/**/*.spec.js'\n  ],\n  \n  // Setup files\n  setupFilesAfterEnv: ['<rootDir>/tests/setup.js'],\n  \n  // Coverage configuration\n  collectCoverage: true,\n  coverageDirectory: 'coverage',\n  coverageReporters: ['text', 'lcov', 'html'],\n  collectCoverageFrom: [\n    'server/**/*.js',\n    'routes/**/*.js',\n    'middleware/**/*.js',\n    'models/**/*.js',\n    'utils/**/*.js',\n    'socket/**/*.js',\n    '!server/server.js', // Exclude main server file\n    '!**/node_modules/**',\n    '!**/logs/**',\n    '!**/uploads/**',\n    '!**/temp/**'\n  ],\n  \n  // Coverage thresholds\n  coverageThreshold: {\n    global: {\n      branches: 70,\n      functions: 70,\n      lines: 70,\n      statements: 70\n    }\n  },\n  \n  // Module paths\n  moduleNameMapping: {\n    '^@/(.*)$': '<rootDir>/$1',\n    '^@config/(.*)$': '<rootDir>/config/$1',\n    '^@middleware/(.*)$': '<rootDir>/middleware/$1',\n    '^@models/(.*)$': '<rootDir>/models/$1',\n    '^@routes/(.*)$': '<rootDir>/routes/$1',\n    '^@utils/(.*)$': '<rootDir>/utils/$1',\n    '^@socket/(.*)$': '<rootDir>/socket/$1'\n  },\n  \n  // Test timeout\n  testTimeout: 30000,\n  \n  // Ignore patterns\n  testPathIgnorePatterns: [\n    '/node_modules/',\n    '/logs/',\n    '/uploads/',\n    '/temp/',\n    '/coverage/'\n  ],\n  \n  // Verbose output\n  verbose: true,\n  \n  // Clear mocks between tests\n  clearMocks: true,\n  \n  // Restore mocks after each test\n  restoreMocks: true,\n  \n  // Transform files\n  transform: {\n    '^.+\\.js$': 'babel-jest'\n  },\n  \n  // Global setup and teardown\n  globalSetup: '<rootDir>/tests/global-setup.js',\n  globalTeardown: '<rootDir>/tests/global-teardown.js',\n  \n  // Test environment options\n  testEnvironmentOptions: {\n    NODE_ENV: 'test'\n  },\n  \n  // Force exit after tests\n  forceExit: true,\n  \n  // Detect open handles\n  detectOpenHandles: true,\n  \n  // Max workers\n  maxWorkers: 1, // Use single worker for database tests\n  \n  // Test result processor\n  testResultsProcessor: 'jest-sonar-reporter'\n};